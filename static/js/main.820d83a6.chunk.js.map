{"version":3,"sources":["App.js","reportWebVitals.js","index.js"],"names":["App","props","updateField","name","event","preventDefault","setState","formula","state","target","type","checked","value","claculate","a","parseInt","b","c","bind","className","class","id","this","onChange","e","onClick","readOnly","React","Component","reportWebVitals","onPerfEntry","Function","then","getCLS","getFID","getFCP","getLCP","getTTFB","ReactDOM","render","StrictMode","document","getElementById"],"mappings":"0PA+FeA,E,kDA1Fb,WAAYC,GAAQ,IAAD,8BACjB,cAAMA,IA4DRC,YAAc,SAACC,EAAMC,GACnBA,EAAMC,iBAEN,EAAKC,SAAS,CACZC,QAAQ,2BACH,EAAKC,MAAMD,SADT,kBAEJJ,EAA4B,aAAtBC,EAAMK,OAAOC,KAAsBN,EAAMK,OAAOE,QAAUP,EAAMK,OAAOG,WAnEjE,EAyEnBC,UAAY,SAACT,GAEXA,EAAMC,iBACN,IAAIS,EAAIC,SAAS,EAAKP,MAAMD,QAAQO,IAAM,GACtCE,EAAID,SAAS,EAAKP,MAAMD,QAAQS,IAAM,GACtCC,EAAIH,EAAIA,EAAI,EAAIA,EAAIE,EAAIA,EAAIA,EAChC,EAAKV,SAAS,CACZC,QAAS,CACPO,EAAGA,EACHE,EAAGA,EACHC,EAAGA,MAjFP,EAAKf,YAAc,EAAKA,YAAYgB,KAAjB,gBACnB,EAAKL,UAAY,EAAKA,UAAUK,KAAf,gBACjB,EAAKV,MAAQ,CACXD,QAAS,CACPO,EAAG,GACHE,EAAG,GACHC,EAAG,KARU,E,0CAcnB,WAAU,IAAD,OACP,OACE,sBAAKE,UAAU,kBAAf,UACE,qBAAKA,UAAU,MAAf,SACE,qBAAKA,UAAU,YAAf,SACE,kDAGJ,qBAAKA,UAAU,MAAf,SACE,sBAAKA,UAAU,YAAf,UACE,yCAAW,oCAAX,cACA,qBAAKC,MAAM,MAAX,SACE,qBAAID,UAAU,QAAd,UAAsB,4CAAc,uCAApC,MAA0D,mCAAQ,sCAAQ,uCAAhB,MAAsC,sCAAQ,uCAA9C,iBAE5D,+CACA,sBAAKC,MAAM,MAAX,iBACM,uBAAOjB,KAAK,IAAIkB,GAAG,IAAIX,KAAK,OAAOE,MAAOU,KAAKd,MAAMD,QAAQO,EAC/DS,SAAU,SAACC,GAAQ,EAAKtB,YAAY,IAAKsB,SAI7C,sBAAKJ,MAAM,MAAX,iBACM,uBAAOjB,KAAK,IAAIkB,GAAG,IAAIX,KAAK,OAAOE,MAAOU,KAAKd,MAAMD,QAAQS,EAC/DO,SAAU,SAACC,GAAQ,EAAKtB,YAAY,IAAKsB,SAI7C,qBAAKJ,MAAM,MAAX,SACE,uBAAOV,KAAK,SAASS,UAAU,KAAKP,MAAM,YACxCa,QAAS,SAACrB,GAAD,OAAW,EAAKS,UAAUT,QAGvC,sBAAKgB,MAAM,MAAX,UACA,mCAAQ,sCAAQ,uCAAhB,MAAsC,sCAAQ,uCAA9C,eACE,uBAAOjB,KAAK,IAAIO,KAAK,OAAOgB,UAAQ,EAACd,MAAOU,KAAKd,MAAMD,QAAQU,EAAGI,GAAG,SAEvE,sBAAKD,MAAM,MAAMC,GAAG,IAApB,iBACOC,KAAKd,MAAMD,QAAQO,EAAE,uBAD5B,OAEOQ,KAAKd,MAAMD,QAAQS,EAAE,uBAF5B,OAGOM,KAAKd,MAAMD,QAAQU,EAAE,sC,GAtDtBU,IAAMC,WCQTC,EAZS,SAAAC,GAClBA,GAAeA,aAAuBC,UACxC,6BAAqBC,MAAK,YAAkD,IAA/CC,EAA8C,EAA9CA,OAAQC,EAAsC,EAAtCA,OAAQC,EAA8B,EAA9BA,OAAQC,EAAsB,EAAtBA,OAAQC,EAAc,EAAdA,QAC3DJ,EAAOH,GACPI,EAAOJ,GACPK,EAAOL,GACPM,EAAON,GACPO,EAAQP,OCDdQ,IAASC,OACP,cAAC,IAAMC,WAAP,UACE,cAAC,EAAD,MAEFC,SAASC,eAAe,SAM1Bb,M","file":"static/js/main.820d83a6.chunk.js","sourcesContent":["'use strict';\nimport React from 'react';\nimport ReactDOM from 'react-dom';\n\nclass App extends React.Component {\n  constructor(props) {\n    super(props);\n    this.updateField = this.updateField.bind(this);\n    this.claculate = this.claculate.bind(this);\n    this.state = {\n      formula: {\n        a: '',\n        b: '',\n        c: ''\n      }\n    }\n\n  }\n\n  render() {\n    return (\n      <div className=\"container-fluid\">\n        <div className=\"row\">\n          <div className='col-xl-12'>\n            <h5>Formulas App</h5>\n          </div>\n        </div>\n        <div className=\"row\">\n          <div className='col-xl-12'>\n            <h4>(a + b)<sup>2</sup> Formula</h4>\n            <div class=\"div\">\n              <h4 className=\"green\"><span> (a + b)<sup>2</sup></span> = <strong><span> a<sup>2</sup></span> + <span> b<sup>2</sup></span> + 2ab</strong></h4>\n            </div>\n            <h5>Submit values</h5>\n            <div class=\"div\">\n              a = <input name=\"a\" id=\"a\" type=\"text\" value={this.state.formula.a}\n                onChange={(e) => { this.updateField(\"a\", e); }}\n                // onKeyUp={(e) => this.claculate()}\n              />\n            </div>\n            <div class=\"div\">\n              b = <input name=\"b\" id=\"b\" type=\"text\" value={this.state.formula.b}\n                onChange={(e) => { this.updateField(\"b\", e); }}\n                // onKeyUp={(e) => this.claculate(e)}\n              />\n            </div>\n            <div class=\"div\">\n              <input type=\"submit\" className=\"p3\" value=\"Claculate\"\n                onClick={(event) => this.claculate(event)}\n              />\n            </div>\n            <div class=\"div\">\n            <strong><span> a<sup>2</sup></span> + <span> b<sup>2</sup></span> + 2ab = </strong>\n              <input name=\"c\" type=\"text\" readOnly value={this.state.formula.c} id=\"c\" />\n            </div>\n            <div class=\"div\" id=\"d\">\n              a = {this.state.formula.a}<br />\n              b = {this.state.formula.b}<br />\n              c = {this.state.formula.c}<br />\n            </div>\n          </div>\n        </div>\n      </div>\n    );\n  }\n\n  updateField = (name, event) => {\n    event.preventDefault();\n  \n    this.setState({\n      formula: {\n        ...this.state.formula,\n        [name]:event.target.type === 'checkbox' ? event.target.checked : event.target.value\n      }\n    });\n    // var c = ((a * a || 0) + (b * b || 0) + 2 * (a || 1) * (b || 1))  || '10';\n  }\n\n  claculate = (event) => {\n\n    event.preventDefault();\n    var a = parseInt(this.state.formula.a) || '';\n    var b = parseInt(this.state.formula.b) || '';\n    var c = a * a + 2 * a * b + b * b\n    this.setState({\n      formula: {\n        a: a,\n        b: b,\n        c: c \n      }\n    });\n  }\n  \n}\n\nexport default App;\n","const reportWebVitals = onPerfEntry => {\n  if (onPerfEntry && onPerfEntry instanceof Function) {\n    import('web-vitals').then(({ getCLS, getFID, getFCP, getLCP, getTTFB }) => {\n      getCLS(onPerfEntry);\n      getFID(onPerfEntry);\n      getFCP(onPerfEntry);\n      getLCP(onPerfEntry);\n      getTTFB(onPerfEntry);\n    });\n  }\n};\n\nexport default reportWebVitals;\n","import React from 'react';\nimport ReactDOM from 'react-dom';\nimport './index.css';\nimport App from './App';\nimport reportWebVitals from './reportWebVitals';\n\nReactDOM.render(\n  <React.StrictMode>\n    <App />\n  </React.StrictMode>,\n  document.getElementById('root')\n);\n\n// If you want to start measuring performance in your app, pass a function\n// to log results (for example: reportWebVitals(console.log))\n// or send to an analytics endpoint. Learn more: https://bit.ly/CRA-vitals\nreportWebVitals();\n"],"sourceRoot":""}